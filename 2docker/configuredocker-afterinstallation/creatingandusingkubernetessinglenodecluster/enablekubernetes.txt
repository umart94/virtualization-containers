The Kubernetes client command, kubectl, is included and configured to connect to the local Kubernetes server. If you have kubectl already installed and pointing to some other environment, such as minikube or a GKE cluster, be sure to change context so that kubectl is pointing to docker-desktop:

> kubectl config get-contexts
> kubectl config use-context docker-desktop
To enable Kubernetes support and install a standalone instance of Kubernetes running as a Docker container, select Enable Kubernetes.

To set Kubernetes as the default orchestrator, select Deploy Docker Stacks to Kubernetes by default.

By default, Kubernetes containers are hidden from commands like docker service ls, because managing them manually is not supported. To make them visible, select Show system containers (advanced). Most users do not need this option.

Click Apply & Restart to save the settings. This instantiates images required to run the Kubernetes server as containers, and installs the kubectl.exe command in the path.

When Kubernetes is enabled and running, an additional status bar item displays at the bottom right of the Docker Desktop Settings dialog. The status of Kubernetes shows in the Docker menu and the context points to docker-desktop.

To disable Kubernetes support at any time, clear the Enable Kubernetes check box. The Kubernetes containers are stopped and removed, and the /usr/local/bin/kubectl command is removed.

To delete all stacks and Kubernetes resources, select Reset Kubernetes Cluster.

If you installed kubectl by another method, and experience conflicts, remove it.

For more information on using the Kubernetes integration with Docker Desktop, see Deploy on Kubernetes.
















run

PS C:\WINDOWS\system32> kubectl config get-contexts
CURRENT   NAME             CLUSTER          AUTHINFO         NAMESPACE
*         docker-desktop   docker-desktop   docker-desktop
PS C:\WINDOWS\system32> kubectl config use-context docker-desktop
Switched to context "docker-desktop".